////////////////////////////////////////////////////////////////////////
//
// This file is part of Common Text Transformation Library.
// Copyright (C) 1997-2009 by Igor Kholodov. 
//
// Common Text Transformation Library is free software: you can
// redistribute it and/or modify it under the terms of the
// GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Common Text Transformation Library is distributed in the hope
// that it will be useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
// PURPOSE.  See the GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with Common Text Transformation Library.
// If not, see <http://www.gnu.org/licenses/>.
//
// mailto:cttl@users.sourceforge.net
// http://cttl.sourceforge.net/
// http://sourceforge.net/projects/cttl/
//
////////////////////////////////////////////////////////////////////////

/**@file xtl_quote_speclzd.h
 * Template specializations for CTTL
 * <a href="http://cttl.sourceforge.net/cttl300docs/manual/cttl/page7100_quote.html">quote helper functions</a>.
 *
 * @remarks
 *      This file was generated by gumus script
 *      on Sun Aug 16 21:51:11 2009.
 *
 * @warning
 *      This is internal CTTL header file and should not
 *      be included by user programs.
 *
 */

#ifndef _CTTL_XTL_QUOTE_SPECLZD_H_INCLUDED_
#define _CTTL_XTL_QUOTE_SPECLZD_H_INCLUDED_

namespace cttl {
using namespace cttl_impl;


/* specialization for CTTL_STD_CHAR:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, CTTL_STD_CHAR middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_char< CTTL_STD_CHAR >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_CHAR:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >
ansi_single_quote( CTTL_STD_CHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >
ansi_double_quote( CTTL_STD_CHAR middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >
c_single_quote( CTTL_STD_CHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >
c_double_quote( CTTL_STD_CHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_CHAR > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, CTTL_STD_WCHAR middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_char< CTTL_STD_WCHAR >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_WCHAR:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( CTTL_STD_WCHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( CTTL_STD_WCHAR middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( CTTL_STD_WCHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( CTTL_STD_WCHAR middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_char< CTTL_STD_WCHAR > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_bool< true > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, bool middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_bool< true > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_bool< true >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for bool:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >
ansi_single_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >
ansi_double_quote( bool middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >
c_single_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >
c_double_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_bool< true > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, bool middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_bool< true > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_bool< true >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for bool:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( bool middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for bool:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( bool middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_bool< true > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR const*:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, CTTL_STD_CHAR const* middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_text_symbol< CTTL_STD_STRING >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_CHAR const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_single_quote( CTTL_STD_CHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR const*:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_double_quote( CTTL_STD_CHAR const* middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_single_quote( CTTL_STD_CHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_CHAR const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_double_quote( CTTL_STD_CHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR const*:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, CTTL_STD_WCHAR const* middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_text_symbol< CTTL_STD_WSTRING >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_WCHAR const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( CTTL_STD_WCHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR const*:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( CTTL_STD_WCHAR const* middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( CTTL_STD_WCHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WCHAR const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( CTTL_STD_WCHAR const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const&:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, CTTL_STD_STRING const& middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_text_symbol< CTTL_STD_STRING >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_STRING const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_single_quote( CTTL_STD_STRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const&:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_double_quote( CTTL_STD_STRING const& middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_single_quote( CTTL_STD_STRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_double_quote( CTTL_STD_STRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const&:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, CTTL_STD_WSTRING const& middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_text_symbol< CTTL_STD_WSTRING >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_WSTRING const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( CTTL_STD_WSTRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const&:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( CTTL_STD_WSTRING const& middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( CTTL_STD_WSTRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( CTTL_STD_WSTRING const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_STRING > const&:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_keyword< CTTL_STD_STRING > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, std::set< CTTL_STD_STRING > const& middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_keyword< CTTL_STD_STRING > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_keyword< CTTL_STD_STRING >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for std::set< CTTL_STD_STRING > const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_single_quote( std::set< CTTL_STD_STRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_STRING > const&:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_double_quote( std::set< CTTL_STD_STRING > const& middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_STRING > const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_single_quote( std::set< CTTL_STD_STRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_STRING > const&:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_double_quote( std::set< CTTL_STD_STRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_WSTRING > const&:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, std::set< CTTL_STD_WSTRING > const& middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_keyword< CTTL_STD_WSTRING >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for std::set< CTTL_STD_WSTRING > const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( std::set< CTTL_STD_WSTRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_WSTRING > const&:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( std::set< CTTL_STD_WSTRING > const& middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_WSTRING > const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( std::set< CTTL_STD_WSTRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for std::set< CTTL_STD_WSTRING > const&:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( std::set< CTTL_STD_WSTRING > const& middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_keyword< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for iswhat_T:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_iswhat_entity >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, iswhat_T middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_iswhat_entity >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_iswhat_entity( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for iswhat_T:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >
ansi_single_quote( iswhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for iswhat_T:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >
ansi_double_quote( iswhat_T middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for iswhat_T:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >
c_single_quote( iswhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for iswhat_T:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >
c_double_quote( iswhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_iswhat_entity >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for iswwhat_T:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_iswwhat_entity >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, iswwhat_T middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_iswwhat_entity >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_iswwhat_entity( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for iswwhat_T:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( iswwhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for iswwhat_T:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( iswwhat_T middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for iswwhat_T:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >
wchar_c_single_quote( iswwhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for iswwhat_T:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >
wchar_c_double_quote( iswwhat_T middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_iswwhat_entity >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const*:CTTL_STD_CHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
        xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >,
        xtl_wrap< xtl_char< CTTL_STD_CHAR > >
    >
>
quote( CTTL_STD_CHAR left_, CTTL_STD_STRING const* middle_, CTTL_STD_CHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >,
            xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >,
            xtl_wrap< xtl_char< CTTL_STD_CHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_CHAR >( left_ ), xtl_text_ref_symbol< CTTL_STD_STRING >( middle_ ), xtl_char< CTTL_STD_CHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_STRING const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_single_quote( CTTL_STD_STRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const*:CTTL_STD_CHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
ansi_double_quote( CTTL_STD_STRING const* middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_single_quote( CTTL_STD_STRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_STRING const*:CTTL_STD_CHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >
c_double_quote( CTTL_STD_STRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_STRING > >, CTTL_STD_CHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const*:CTTL_STD_WCHAR */
inline
xtl_wrap<
    xtl_quote_generic<
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
        xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >,
        xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
    >
>
wchar_quote( CTTL_STD_WCHAR left_, CTTL_STD_WSTRING const* middle_, CTTL_STD_WCHAR right_ )
{
    typedef
        xtl_quote_generic<
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >,
            xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >,
            xtl_wrap< xtl_char< CTTL_STD_WCHAR > >
        >
        xtl_pair_T;

    return xtl_wrap< xtl_pair_T >( xtl_pair_T( xtl_char< CTTL_STD_WCHAR >( left_ ), xtl_text_ref_symbol< CTTL_STD_WSTRING >( middle_ ), xtl_char< CTTL_STD_WCHAR >( right_ ) ) );
}


/* specialization for CTTL_STD_WSTRING const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_single_quote( CTTL_STD_WSTRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const*:CTTL_STD_WCHAR */
inline xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_ansi_double_quote( CTTL_STD_WSTRING const* middle_ )
{
    /* ANSI-style quotes */
    return xtl_wrap< xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_ansi_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_single_quote( CTTL_STD_WSTRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_single_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


/* specialization for CTTL_STD_WSTRING const*:CTTL_STD_WCHAR */
inline
xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >
wchar_c_double_quote( CTTL_STD_WSTRING const* middle_ )
{
    /* C-style quotes */
    return xtl_wrap< xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR > >( xtl_quote_c_double_quote< xtl_wrap< xtl_text_ref_symbol< CTTL_STD_WSTRING > >, CTTL_STD_WCHAR >( middle_ ) );
}


}   /* namespace cttl */

#endif /* _CTTL_XTL_QUOTE_SPECLZD_H_INCLUDED_ */
